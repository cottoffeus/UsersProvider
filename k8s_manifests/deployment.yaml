apiVersion: v1
kind: Service
metadata:
  name: users-provider-load-balancer
  namespace: testing
spec:
  type: LoadBalancer
  ports:
    - port: 777
      targetPort: 9000
  selector:
    app: users-provider-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-provider
  namespace: testing
  labels:
    app: users-provider-app
spec:
  selector:
    matchLabels:
      app: users-provider-app
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: users-provider-app
    spec:
      containers:
        - image: cottoffeus/users_provider:0.0.6
          name: users-provider
          ports:
            - containerPort: 9000
          livenessProbe:
            httpGet:
              path: /ping
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - mountPath: /app/config
              name: config
      volumes:
        - name: config
          configMap:
            name: app-config
            items:
            - key: users-provider-config
              path: application.properties
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: testing
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - image: docker.io/bitnami/postgresql:14
          name: postgres
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: postgresql-data
      volumes:
        - name: postgresql-data